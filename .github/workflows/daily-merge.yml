name: Daily Auto-Merge to Target Branch

on:
  schedule:
    # Runs daily at 11:30 PM UTC (adjust timezone as needed)
    - cron: '30 23 * * *'
      #     min hr day month dayOfWeek
  
  # Manual trigger option
  workflow_dispatch:
    inputs:
      source_branch: 
        description: 'Source branch to merge from'
        required: true
        default: 'development'
      target_branch:
        description: 'Target branch to merge into'
        required: true
        default: 'main'

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
    
    - name: Set branch variables
      run: |
        # Set default branches (modify these as needed)
        SOURCE_BRANCH="${{ github.event.inputs.source_branch || 'dev' }}"
        TARGET_BRANCH="${{ github.event.inputs.target_branch || 'main' }}"
        
        echo "SOURCE_BRANCH=$SOURCE_BRANCH" >> $GITHUB_ENV
        echo "TARGET_BRANCH=$TARGET_BRANCH" >> $GITHUB_ENV
    
    - name: Check if source branch exists
      run: |
        if ! git ls-remote --heads origin $SOURCE_BRANCH | grep -q $SOURCE_BRANCH; then
          echo "❌ Source branch '$SOURCE_BRANCH' does not exist on remote"
          exit 1
        fi
        echo "✅ Source branch '$SOURCE_BRANCH' exists"
    
    - name: Check if target branch exists
      run: |
        if ! git ls-remote --heads origin $TARGET_BRANCH | grep -q $TARGET_BRANCH; then
          echo "❌ Target branch '$TARGET_BRANCH' does not exist on remote"
          exit 1
        fi
        echo "✅ Target branch '$TARGET_BRANCH' exists"
    
    - name: Fetch latest changes
      run: |
        git fetch origin $SOURCE_BRANCH
        git fetch origin $TARGET_BRANCH
    
    - name: Check for new commits
      id: check_commits
      run: |
        # Get the latest commit from both branches
        SOURCE_COMMIT=$(git rev-parse origin/$SOURCE_BRANCH)
        TARGET_COMMIT=$(git rev-parse origin/$TARGET_BRANCH)
        
        # Check if source branch has commits ahead of target branch
        if git merge-base --is-ancestor origin/$SOURCE_BRANCH origin/$TARGET_BRANCH; then
          echo "No new commits to merge from $SOURCE_BRANCH to $TARGET_BRANCH"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "New commits found in $SOURCE_BRANCH"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Create merge commit
      if: steps.check_commits.outputs.has_changes == 'true'
      run: |
        # Switch to target branch
        git checkout -B $TARGET_BRANCH origin/$TARGET_BRANCH
        
        # Merge source branch into target branch
        git merge origin/$SOURCE_BRANCH --no-ff -m "🤖 Daily auto-merge: $SOURCE_BRANCH → $TARGET_BRANCH ($(date '+%Y-%m-%d %H:%M:%S UTC'))"
    
    - name: Push merged changes
      if: steps.check_commits.outputs.has_changes == 'true'
      run: |
        git push origin $TARGET_BRANCH
        echo "✅ Successfully merged $SOURCE_BRANCH into $TARGET_BRANCH"
    
    - name: Create summary
      if: always()
      run: |
        if [ "${{ steps.check_commits.outputs.has_changes }}" == "true" ]; then
          echo "## ✅ Daily Merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Source Branch**: \`$SOURCE_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Target Branch**: \`$TARGET_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Successfully merged new commits" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        else
          echo "## ℹ️ Daily Merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Source Branch**: \`$SOURCE_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Target Branch**: \`$TARGET_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: No new commits to merge" >> $GITHUB_STEP_SUMMARY
          echo "- **Time**: $(date '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Notify on failure
      if: failure()
      run: |
        echo "## ❌ Daily Merge Failed" >> $GITHUB_STEP_SUMMARY
        echo "The daily merge from \`$SOURCE_BRANCH\` to \`$TARGET_BRANCH\` failed." >> $GITHUB_STEP_SUMMARY
        echo "Please check the workflow logs and resolve conflicts manually." >> $GITHUB_STEP_SUMMARY